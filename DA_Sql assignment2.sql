-- Question 1: Retrieve the total number of rentals made in the Sakila database. 
USE mavenmovies;
Select Count(rental_id) As total_num_of_Rental from mavenmovies.rental;

-- Question 2: Find the average rental duration (in days) of movies rented from the Sakila
SELECT AVG(DATEDIFF(return_date, rental_date)) AS average_rental FROM rental;

-- Question 3: Display the first name and last name of customers in uppercase. 
Select UPPER(first_name),Upper(last_name) from customer;

-- Question 4:Extract the month from the rental date and display it alongside the rental ID.
select rental_ID, month(rental_date) from rental;

-- Question 5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
Select customer_id, count(rental_Id) as rental_count from rental group by Customer_id;

-- Question 6 Find the total revenue generated by each store
SELECT store_id, SUM(amount) AS total_revenue FROM store JOIN staff st ON s.store_id = st.store_id JOIN payment p ON st.staff_id = p.staff_id GROUP BY s.store_id;

-- Question 7  Display the title of the movie, customer's first name, and last name who rented it.
-- Hint: Use JOIN between the film, inventory, rental, and customer tables.

Select title, first_name, last_name from film inner join inventory on film.film_id = inventory.film_id
 inner join rental on rental.inventory_id = inventory.inventory_id 
 inner join customer on rental.customer_id = customer.customer_id;
 
 -- Retrieve the names of all actors who have appeared in the film "Jungle close."
 -- Hint: Use JOIN between the film actor, film, and actor tables.
 select first_name, last_name from actor inner join film_actor on actor.actor_id = film_actor.actor_id 
 inner join film on film_actor.film_id = film.film_id where title = 'JUNGLE_CLOSE';
 
-- -- GROUP BY:
-- Question 1:
-- Determine the total number of rentals for each category of movies.
-- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY
SELECT category_id, COUNT(rental_id) FROM rental
inner JOIN inventory ON rental.inventory_id = inventory.inventory_id
inner JOIN film ON inventory.film_id = film.film_id
inner JOIN film_category ON film.film_id = film_category.film_id
GROUP BY category_id;

-- Question 2:
-- Find the average rental rate of movies in each language.
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY.
Select name, AVG(rental_rate) from film 
inner join language on film.language_id = language.language_id group by name;

-- Joins
-- Retrieve the customer names along with the total amount they've spent on rentals.
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY.
  select first_name, last_name, sum(amount) as total_rental from customer c inner join payment p on
 c.customer_id = p.customer_id
 inner join rental r on c.customer_id = r.customer_id group by c.customer_id;
 
-- Question 4:
-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY.
SELECT c.first_name, c.last_name, f.title AS rented_movie_title
FROM customer
JOIN address a ON c.address_id = a.address_id
JOIN city ci ON a.city_id = ci.city_id
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN film f ON i.film_id = f.film_id
WHERE ci.city = 'London'
ORDER BY first_name, last_name, title;

-- Advanced Joins and GROUP BY:
-- Question 5:
-- Display the top 5 rented movies along with the number of times they've been rented.
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results.
SELECT f.title AS movie_title, COUNT(*) AS rental_count
FROM film f
JOIN inventory i ON f.film_id = i.film_id
JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.title
ORDER BY rental_count DESC
LIMIT 5;

-- Question 6:
-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY.

SELECT c.customer_id, c.first_name, c.last_name
FROM customer c
JOIN rental r ON c.customer_id = r.customer_id
JOIN inventory i ON r.inventory_id = i.inventory_id
JOIN store s ON i.store_id = s.store_id
WHERE s.store_id IN (1, 2)
GROUP BY c.customer_id, c.first_name, c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;







 











