USE mavenmovies;
-- Q1. Write a query using cte to retrieve the distinct list of actor names and number of films 
-- they have acted in from the actor and film_actor table
with actorCount as( 
select  a.actor_id, a.first_name, a.last_name, count(distinct film_id) Film_count  from actor a
join film_actor fa on fa.actor_id = a.actor_id
group by actor_id, first_name, last_name
)
select
actor_id,
first_name,
last_name,
Film_count
from actorCount;


-- Q2. Use recursive cte to generate a hierachical list of catagories and their subcatagories from the catagory table

-- Q3. Create  a cte that combines information from the film and 
-- language tables to display the film title, language name, and rental rate.
with combined_table as (
select 
title, lan.name audio, rental_rate 
from film f 
join language lan on  lan.language_id = f.language_id
)
select
title, audio, rental_rate
from combined_table;


-- Q4. Write a query using cte to find the total revenue 
-- generated by each customer (sum of payments) from the customer and payment tables.

with Total_revenue as (
select c.customer_id, sum(amount) amount from customer c 
join payment p on c.customer_id = p.customer_id
group by customer_id 
)
select
customer_id, amount
from Total_revenue;


-- Q5. Utilize a cte with a window function to rank films 
-- based on their rental duration from the film table. 

with film_ranking as (
select 
film_id, rental_duration,
rank() over(partition by film_id order by rental_duration desc) as rnk
 from film 
 order by rental_duration desc
)
select
film_id,
rental_duration,
rnk
from film_ranking;


-- Q6. Create a cte to list customers who have made more than two rentals , 
-- and then join this cte with the customer table to retrieve additional customer details.

with total_rentals as (
select 
c.customer_id, count(rental_id) rentals
from customer c 
join rental r on r.customer_id = c.customer_id
group by c.customer_id
having rentals > 2
)
select
*from total_rentals tr
join customer ct on ct.customer_id = tr.customer_id;

-- Q7. Write a query using a cte to find the total number of rentals made each month, 
-- considering the rental_date from rental table.
with total_rentals as (
select
 count(rental_id) rentals, monthname(rental_date) Months
from rental
group by months
)
select
rentals,
Months
from total_rentals;

-- Q8. Use cte to pivot data from the payment table to display the total payments made 
-- by each customer in separate column for different payment methods.


-- Q9. Create a cte to generate a report showing pairs of actors who have appeared 
-- in the same film together using the film_actor table
with actor_pairs as (
select 
fa.actor_id as actor_1, ft.actor_id as actor_2,
title 
from film_actor fa
join  film_actor ft on fa.film_id = ft.film_id and fa.actor_id < ft.actor_id
join film f on fa.film_id = f.film_id
)
select
actor_1,
actor_2,
title
from actor_pairs;


